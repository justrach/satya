name: Build and publish wheels

on:
  push:
    tags:
      - 'v*'
  workflow_dispatch:

jobs:
  linux:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        target: [x86_64]  # Start with just x86_64 for stability
        python-version: ["3.8", "3.9", "3.10", "3.11"]  # Exclude 3.12 initially for stability
      fail-fast: false  # Allow other matrix jobs to continue even if one fails
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}
      - name: Build wheels
        uses: PyO3/maturin-action@v1
        with:
          target: ${{ matrix.target }}
          args: --release --out dist
          sccache: 'true'
          manylinux: auto
      - name: Upload wheels
        uses: actions/upload-artifact@v4
        with:
          name: wheels-linux-${{ matrix.python-version }}-${{ matrix.target }}
          path: dist

  windows:
    runs-on: windows-latest
    strategy:
      matrix:
        python-version: ["3.8", "3.9", "3.10", "3.11"]  # Exclude 3.12 initially for stability
        target: [x64]
      fail-fast: false  # Allow other matrix jobs to continue even if one fails
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}
          architecture: ${{ matrix.target }}
      - name: Build wheels
        uses: PyO3/maturin-action@v1
        with:
          args: --release --out dist
          sccache: 'true'
      - name: Upload wheels
        uses: actions/upload-artifact@v4
        with:
          name: wheels-windows-${{ matrix.python-version }}-${{ matrix.target }}
          path: dist

  macos:
    runs-on: macos-latest
    strategy:
      matrix:
        python-version: ["3.8", "3.9", "3.10", "3.11"]  # Exclude 3.12 initially for stability
        target: [x86_64]  # Start with just x86_64 for stability
      fail-fast: false  # Allow other matrix jobs to continue even if one fails
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}
      - name: Build wheels
        uses: PyO3/maturin-action@v1
        with:
          target: ${{ matrix.target }}
          args: --release --out dist
          sccache: 'true'
      - name: Upload wheels
        uses: actions/upload-artifact@v4
        with:
          name: wheels-macos-${{ matrix.python-version }}-${{ matrix.target }}
          path: dist

  # Optional job for more experimental targets
  extended:
    runs-on: ubuntu-latest
    needs: [linux, windows, macos]  # Only run after main platforms succeed
    strategy:
      matrix:
        include:
          - os: ubuntu-latest
            python-version: "3.12"
            target: x86_64
          - os: ubuntu-latest
            python-version: "3.8"
            target: aarch64
          - os: macos-latest
            python-version: "3.8"
            target: aarch64
      fail-fast: false
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}
      - name: Build wheels
        uses: PyO3/maturin-action@v1
        with:
          target: ${{ matrix.target }}
          args: --release --out dist
          sccache: 'true'
          manylinux: auto
        continue-on-error: true  # Allow failures here, we'll still get the core wheels
      - name: Upload wheels
        uses: actions/upload-artifact@v4
        with:
          name: wheels-extended-${{ matrix.os }}-${{ matrix.python-version }}-${{ matrix.target }}
          path: dist
        if: success()  # Only upload if build succeeded

  collect-wheels:
    name: Collect all wheels
    runs-on: ubuntu-latest
    needs: [linux, windows, macos, extended]
    steps:
      - uses: actions/download-artifact@v4
        with:
          pattern: wheels-*
          path: all-wheels
          merge-multiple: true
      - name: Upload combined wheels
        uses: actions/upload-artifact@v4
        with:
          name: all-wheels
          path: all-wheels

  release:
    name: Release
    runs-on: ubuntu-latest
    needs: [collect-wheels]
    steps:
      - uses: actions/download-artifact@v4
        with:
          name: all-wheels
          path: dist
      - name: Publish to PyPI
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
          password: ${{ secrets.PYPI_API_TOKEN }}
          skip_existing: true  # Skip any duplicates 