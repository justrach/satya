name: Build and publish wheels

on:
  push:
    tags:
      - 'v*'
  workflow_dispatch:

# Add permissions needed for creating releases
permissions:
  contents: write
  id-token: write

jobs:
  linux-x86_64:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.8", "3.9", "3.10", "3.11", "3.12", "3.13"]
      fail-fast: false
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}
      - name: Build wheels
        uses: PyO3/maturin-action@v1
        with:
          target: x86_64
          args: --release --out dist
          sccache: 'true'
          manylinux: auto
      - name: Upload wheels
        uses: actions/upload-artifact@v4
        with:
          name: wheels-linux-${{ matrix.python-version }}-x86_64
          path: dist

  # Separate job for aarch64 Linux with specific config for cross-compilation
  linux-aarch64:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.8", "3.9", "3.10", "3.11", "3.12", "3.13"]
      fail-fast: false
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}
      
      # Set up QEMU for cross-platform emulation
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3
        with:
          platforms: arm64
      
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      
      # Use cross-compilation container with platform specified
      - name: Build wheels
        uses: PyO3/maturin-action@v1
        with:
          target: aarch64
          args: >-
            --release 
            --out dist 
            --interpreter /opt/python/cp${{ matrix.python-version == '3.10' && '310' || matrix.python-version == '3.11' && '311' || matrix.python-version == '3.12' && '312' || matrix.python-version == '3.13' && '313' || matrix.python-version == '3.8' && '38' || '39' }}-cp${{ matrix.python-version == '3.10' && '310' || matrix.python-version == '3.11' && '311' || matrix.python-version == '3.12' && '312' || matrix.python-version == '3.13' && '313' || matrix.python-version == '3.8' && '38' || '39' }}/bin/python
          manylinux: 2_28
          container: quay.io/pypa/manylinux_2_28_aarch64
          docker-options: "--platform linux/arm64"
      
      - name: Upload wheels
        uses: actions/upload-artifact@v4
        with:
          name: wheels-linux-${{ matrix.python-version }}-aarch64
          path: dist

  windows:
    runs-on: windows-latest
    strategy:
      matrix:
        python-version: ["3.8", "3.9", "3.10", "3.11", "3.12", "3.13"]
        target: [x64]
      fail-fast: false
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}
          architecture: ${{ matrix.target }}
      - name: Build wheels
        uses: PyO3/maturin-action@v1
        with:
          args: --release --out dist
          sccache: 'true'
      - name: Upload wheels
        uses: actions/upload-artifact@v4
        with:
          name: wheels-windows-${{ matrix.python-version }}-${{ matrix.target }}
          path: dist

  macos:
    runs-on: macos-latest
    strategy:
      matrix:
        python-version: ["3.8", "3.9", "3.10", "3.11", "3.12", "3.13"]
        target: [x86_64, aarch64]
      fail-fast: false
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}
      - name: Build wheels
        uses: PyO3/maturin-action@v1
        with:
          target: ${{ matrix.target }}
          args: --release --out dist
          sccache: 'true'
          universal2: ${{ matrix.target == 'aarch64' }}
      - name: Upload wheels
        uses: actions/upload-artifact@v4
        with:
          name: wheels-macos-${{ matrix.python-version }}-${{ matrix.target }}
          path: dist

  collect-wheels:
    name: Collect all wheels
    runs-on: ubuntu-latest
    needs: [linux-x86_64, linux-aarch64, windows, macos]
    steps:
      - uses: actions/download-artifact@v4
        with:
          pattern: wheels-*
          path: all-wheels
          merge-multiple: true
      - name: Upload combined wheels
        uses: actions/upload-artifact@v4
        with:
          name: all-wheels
          path: all-wheels

  release:
    name: Release to PyPI
    runs-on: ubuntu-latest
    needs: [collect-wheels]
    # This conditional allows manual triggering without requiring the tag push
    if: startsWith(github.ref, 'refs/tags/v') || github.event_name == 'workflow_dispatch'
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - uses: actions/download-artifact@v4
        with:
          name: all-wheels
          path: dist
      - name: List wheels
        run: ls -la dist/
      - name: Publish to PyPI
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
          password: ${{ secrets.PYPI_API_TOKEN }}
          skip_existing: true
          
      # Create GitHub Release for tagged versions
      - name: Extract version from tag
        if: startsWith(github.ref, 'refs/tags/v')
        id: get_version
        run: echo "VERSION=${GITHUB_REF#refs/tags/v}" >> $GITHUB_OUTPUT
      
      - name: Generate Release Notes
        if: startsWith(github.ref, 'refs/tags/v')
        run: |
          git log --pretty=format:"* %s (%h)" $(git describe --tags --abbrev=0 HEAD^)..HEAD > release_notes.md
          echo "## Satya v${{ steps.get_version.outputs.VERSION }}" | cat - release_notes.md > temp && mv temp release_notes.md
          echo "" >> release_notes.md
          echo "## Artifacts" >> release_notes.md
          echo "This release includes wheels for:" >> release_notes.md
          echo "- Linux (x86_64, aarch64)" >> release_notes.md
          echo "- macOS (x86_64, arm64)" >> release_notes.md
          echo "- Windows (x64)" >> release_notes.md
      
      - name: Create GitHub Release
        if: startsWith(github.ref, 'refs/tags/v')
        uses: softprops/action-gh-release@v1
        with:
          files: dist/*
          body_path: release_notes.md
          draft: false
          prerelease: false
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} 